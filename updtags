#!/bin/sh

# use_cscope: 1: cscope; 0: gtags
use_cscope=1

# get project directory
prj_dir="$1"
if [ -z $prj_dir ]; then
	prj_dir=`pwd`
fi

# replace with absolute path
prj_dir=`readlink -f $prj_dir`

source_lst_file=$prj_dir/cscope.files

echo "Generating source file list..."
if command -v rg >/dev/null 2>&1; then
  rg --ignore-file ~/.ignore --files --follow --one-file-system --type={c,cpp,asm} $prj_dir | sort > $source_lst_file.new
elif command -v ag >/dev/null 2>&1; then
  ag --path-to-ignore ~/.ignore -f --one-device -l --nocolor --nogroup --asm --cc --cpp '.' $prj_dir | sort > $source_lst_file.new
else
  find $prj_dir -type f \( \
    -iname '*.c' -o \
    -iname '*.cc' -o \
    -iname '*.cpp' -o \
    -iname '*.h' -o \
    -iname '*.s' -o \
    \) | grep -f ~/.ignore -v | sort | uniq > $source_lst_file.new
fi

filelist_changed=`cmp $source_lst_file $source_lst_file.new 2>&1`
mv $source_lst_file.new $source_lst_file

echo "Updating ctag file..."
ctags --C++-kinds=+p --fields=+iaS --extra=+q --langmap=java:+.aidl -L $source_lst_file &

if [ "$use_cscope" == 1 ]; then
  echo "Updating cscope database..."
  cscope -b -q -i $source_lst_file &
else
  echo "Updating gtag file..."
  if [ "$filelist_changed" ]; then
    gtags -f $source_lst_file &
  else
    global -u &
  fi
fi

wait
echo "Done!"
